name: Daily Dependency Updates

on:
  schedule:
    - cron: '0 2 * * *' # Run daily at 2 AM UTC
  workflow_dispatch: # Allow manual triggers

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Install current dependencies (for comparison)
        run: pnpm install

      - name: Upload current lockfile
        uses: actions/upload-artifact@v4
        with:
          name: original-lockfile
          path: pnpm-lock.yaml
          retention-days: 1

  update-dependencies:
    runs-on: ubuntu-latest
    needs: setup
    outputs:
      has-changes: ${{ steps.changes.outputs.has-changes }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Update all dependencies to latest
        run: |
          # Update root dependencies
          pnpm update --latest

          # Update all workspace dependencies
          pnpm -r update --latest

          # Update devDependencies specifically
          pnpm update --latest @types/node lage lerna nx turbo typescript

      - name: Install updated dependencies
        run: pnpm install

      - name: Run benchmark to ensure everything still works
        run: |
          timeout 600 pnpm run benchmark || echo "Benchmark timed out or failed"

      - name: Check for changes
        id: changes
        run: |
          if git diff --quiet package.json && git diff --quiet pnpm-lock.yaml; then
            echo "has-changes=false" >> $GITHUB_OUTPUT
          else
            echo "has-changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Upload updated files
        if: steps.changes.outputs.has-changes == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: updated-files
          path: |
            package.json
            pnpm-lock.yaml
            packages/*/package.json
            apps/*/package.json
          retention-days: 1

  publish:
    runs-on: ubuntu-latest
    needs: [setup, update-dependencies]
    if: needs.update-dependencies.outputs.has-changes == 'true'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT_TOKEN }}
          fetch-depth: 0

      - name: Download updated files
        uses: actions/download-artifact@v4
        with:
          name: updated-files

      - name: Create branch and commit changes
        id: commit
        run: |
          # Configure git
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          # Create and switch to new branch
          BRANCH_NAME="dependencies/update-$(date '+%Y-%m-%d')"
          git checkout -b "$BRANCH_NAME"

          # Stage all changes
          git add -A

          # Check if there are actually changes to commit
          if git diff --cached --quiet; then
            echo "No changes to commit"
            echo "has-commits=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Commit changes
          git commit -m "⬆️ Update dependencies to latest versions - $(date '+%Y-%m-%d')"

          # Push branch
          git push origin "$BRANCH_NAME"

          echo "branch-name=$BRANCH_NAME" >> $GITHUB_OUTPUT
          echo "has-commits=true" >> $GITHUB_OUTPUT

      - name: Create PR for dependency updates
        if: steps.commit.outputs.has-commits == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PAT_TOKEN }}
          script: |
            const branchName = '${{ steps.commit.outputs.branch-name }}';

            // Create PR
            await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `⬆️ Daily dependency updates - ${new Date().toISOString().split('T')[0]}`,
              head: branchName,
              base: 'main',
              body: `
              Automated daily dependency updates.

              This PR updates all dependencies to their latest versions:
              - Root package dependencies
              - All workspace package dependencies
              - Benchmark tool dependencies (nx, turbo, lerna, lage)

              The benchmark was run after updates to ensure compatibility.
              `
            });
